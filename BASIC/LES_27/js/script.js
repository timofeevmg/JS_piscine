'use strict';

// // 1
// let x = 5;
// alert(x++);	//5 постфиксный инкремент сначала возвращает исходное значение,
//				//а потом увеличивает на 1

// 2
// alert([] + false - null + true);	//NaN, [] - это пустая строка "", то есть false.
//									//А false - null при динамическое типизации даст NaN.

// // 3
// let y = 1;
// let x = y = 2;
// alert(x);	//2

// // 4
// console.log([] + 1 + 2); //12 ([] - это пустая строка)

// // 5
// alert("1"[0]); //1 (строка - массивоподобный объект)

// // 6
// alert(2 && 1 && null && 0 && undefined);	// null (&& И запинается на лжи, || ИЛИ запинается на правде)
// 											// запнулся на null и вернул его

// // 7
// !!(a && b); // есть разница. 1ое вернёт булиновое значение,
// (a && b);   // а 2ое вернёт а или б.
// alert(!!(1 && 2) === (1 && 2));

// // 8
// alert(null || 2 && 3 || 4); //3 (сначала && вернёт 3, затем || вернёт первое истинное значение - 3)

// // 9
// let a = [1, 2, 3],
// 	b = [1, 2, 3];
// alert(a == b); // false

// // 10
// alert(+"Infinity"); // Infinity

// // 11
// alert("Ёжик" > "яблоко") // false

// // 12
// alert(0 || "" || 2 || undefined || true || false); //2

// "" + 1 + 0 = 10			//оператор + приводит операнды к строке 
							//при наличии хоть одной строки
// "" - 1 + 0 = -1			//исполнение по порядку - > +;
							//оператор - приводит строку к числу
// true + false = 1			// true > 1, false > 0
// 6 / "3" = 2				//
// "2" * "3" = 6			//
// 4 + 5 + "px" = 9px		//
// "$" + 4 + 5 = $45		//
// "4" - 2 = 2				//
// "4px" - 2 = NaN			//ошибка при преобразовании 4px в число
// 7 / 0 = Infinity			//деление на 0
// "  -9  " + 5 = "  -9  5"	//есть строка
// "  -9  " - 5 = -14		//
// null + 1 = 1				//null > 0
// undefined + 1 = NaN		//undefined > NaN
// " \t \n" - 2	= -2		//пробельные символы \t \n и пробел игнорируются,
							//поэтому " \t \n" аналогичен ""

// 5 > 4					//true
// "ананас" > "яблоко"		//false
// "2" > "12"				//true
// undefined == null		//true
// undefined === null		//false
// null == "\n0\n"			//false
// null === +"\n0\n"		//false

alert( null || 2 || undefined );	//2
alert( alert(1) || 2 || alert(3) );	//1, потом 2, тк alert() не возвращает значение (undefined)
alert( 1 && null && 2 );			//null
alert( alert(1) && alert(2) );		//1, потом undefined
alert( null || 2 && 3 || 4 );		//3