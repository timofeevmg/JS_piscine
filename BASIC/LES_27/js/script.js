'use strict';

// // 1
// let x = 5;
// alert(x++);	//5 постфиксный инкремент сначала возвращает исходное значение,
//				//а потом увеличивает на 1

// 2
// alert([] + false - null + true);	//NaN, [] - это пустая строка "", то есть false.
//									//А false - null при динамическое типизации даст NaN.

// // 3
// let y = 1;
// let x = y = 2;
// alert(x);	//2

// // 4
// console.log([] + 1 + 2); //12 ([] - это пустая строка)

// // 5
// alert("1"[0]); //1 (строка - массивоподобный объект)

// // 6
// alert(2 && 1 && null && 0 && undefined);	// null (&& И запинается на лжи, || ИЛИ запинается на правде)
// 											// запнулся на null и вернул его

// // 7
// !!(a && b); // есть разница. 1ое вернёт булиновое значение,
// (a && b);   // а 2ое вернёт а или б.
// alert(!!(1 && 2) === (1 && 2));

// // 8
// alert(null || 2 && 3 || 4); //3 (сначала && вернёт 3, затем || вернёт первое истинное значение - 3)

// // 9
// let a = [1, 2, 3],
// 	b = [1, 2, 3];
// alert(a == b); // false

// // 10
// alert(+"Infinity"); // Infinity

// // 11
// alert("Ёжик" > "яблоко") // false

// // 12
// alert(0 || "" || 2 || undefined || true || false); //2

